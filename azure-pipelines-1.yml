# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- master

pool:
  vmImage: ubuntu-latest

steps:
- script: echo Hello, world!
  displayName: 'Run a one-line script'

- task: CmdLine@2
  displayName: 'GO SQL Connect'
  inputs:
    script: |
      // Go connection Sample Code:
      package main
      import (
      	_ "github.com/denisenkom/go-mssqldb"
      	"database/sql"
      	"context"
      	"log"
      	"fmt"
      	"errors"
      )
      
      var db *sql.DB
      var server = "davids-sql-database-server.database.windows.net"
      var port = 1433
      var user = "dbadmin"
      var password = "adadmin123!"
      var database = "sql-database"
      
      func main() {
      	// Build connection string
      	connString := fmt.Sprintf("server=%s;user id=%s;password=%s;port=%d;database=%s;",
      		server, user, password, port, database)
      	var err error
      	// Create connection pool
      	db, err = sql.Open("sqlserver", connString)
      	if err != nil {
      		log.Fatal("Error creating connection pool: ", err.Error())
      	}
      	ctx := context.Background()
      	err = db.PingContext(ctx)
      	if err != nil {
      		log.Fatal(err.Error())
      	}
      	fmt.Printf("Connected!")
      }
